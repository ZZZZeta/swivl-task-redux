{"version":3,"sources":["components/UserRow/index.tsx","components/Preloader/index.tsx","components/Pagination/index.tsx","redux/users/constants.ts","utils/makeApiCall.ts","api/users.ts","redux/users/actions.ts","redux/users/selectors.ts","pages/users/UserList.tsx","hooks/usePagination/index.ts","utils/parseDate.ts","components/UserProfile/index.tsx","pages/users/User.tsx","routes/index.tsx","styles/index.ts","App.tsx","reportWebVitals.ts","redux/users/reducer.ts","redux/rootReducer.ts","store/index.ts","store/middlewares/apiMiddleware.ts","index.tsx"],"names":["Wrapper","styled","div","Text","p","Image","img","StyledLink","Link","UserRow","user","login","avatar_url","html_url","to","src","alt","href","target","rel","StyledPreloader","Preloader","isLoading","message","Arrow","i","ArrowLeft","ArrowRight","ArrowContainer","PageNumber","Pagination","onNextClick","onPrevClick","page","onClick","REDUCER","GET_USER_LIST_REQUEST","GET_USER_LIST_SUCCESS","GET_USER_LIST_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","makeApiCall","url","method","body","fetch","then","res","json","catch","err","console","error","getUserList","per_page","since","types","promise","apiGetUserList","getUser","username","apiGetUser","selectIsLoading","state","selectUserList","userList","selectUser","ListWrapper","theme","colors","primary","List","UserList","dispatch","useDispatch","useState","startIndex","setStartIndex","currentPage","setCurrentPage","nextPage","prevPage","prevIndex","useGHPagination","users","useSelector","isUserLoading","useEffect","map","id","parseDate","inputDate","pad","s","date","Date","getDate","getMonth","getFullYear","join","Profile","UserProfile","name","followers","following","created_at","company","email","location","blog","bio","User","useParams","isLoadingUser","Router","exact","path","component","main","secondary","dark_blue","white","GlobalStyles","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","type","result","rootReducer","middleware","applyMiddleware","store","next","getState","rest","Array","isArray","length","Error","every","REQUEST","SUCCESS","FAILURE","response","createStore","compose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o2BAMA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAAOF,IAAOG,EAAV,KAMJC,EAAQJ,IAAOK,IAAV,KAMLC,EAAaN,YAAOO,IAAPP,CAAH,KAgBT,SAASQ,EAAT,GAA0C,IAAvBC,EAAsB,EAAtBA,KAChBC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAE3B,OACE,eAACb,EAAD,WACE,eAACO,EAAD,CAAYO,GAAE,gBAAWH,GAAzB,UACE,cAACN,EAAD,CAAOU,IAAKH,EAAYI,IAAI,gBAC5B,cAACb,EAAD,UAAOQ,OAGT,mBAAGM,KAAMJ,EAAUK,OAAO,SAASC,IAAI,aAAvC,+B,4TChDN,IAAMC,EAAkBnB,IAAOC,IAAV,KAoBd,SAASmB,EAAT,GAA4D,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,QACrC,OAAOD,EAAY,cAACF,EAAD,UAAkBG,IAA6B,K,60BCrBpE,IAAMvB,EAAUC,IAAOC,IAAV,KAMPsB,EAAQvB,IAAOwB,EAAV,KAOLC,EAAYzB,YAAOuB,EAAPvB,CAAH,KAKT0B,EAAa1B,YAAOuB,EAAPvB,CAAH,KAKV2B,EAAiB3B,IAAOC,IAAV,KAQd2B,EAAa5B,IAAOC,IAAV,KAUT,SAAS4B,EAAT,GAIc,IAHnBC,EAGkB,EAHlBA,YACAC,EAEkB,EAFlBA,YACAC,EACkB,EADlBA,KAEA,OACE,eAAC,EAAD,WACE,cAACL,EAAD,CAAgBM,QAASF,EAAzB,SACE,cAACN,EAAD,MAEF,cAACG,EAAD,UAAaI,IACb,cAACL,EAAD,CAAgBM,QAASH,EAAzB,SACE,cAACJ,EAAD,SCzDR,IAAMQ,EAAU,QAEHC,EAAqB,UAAMD,EAAN,0BACrBE,EAAqB,UAAMF,EAAN,0BACrBG,EAAqB,UAAMH,EAAN,0BAErBI,EAAgB,UAAMJ,EAAN,qBAChBK,EAAgB,UAAML,EAAN,qBAChBM,EAAgB,UAAMN,EAAN,qBCFtB,SAASO,EAAT,GAA0D,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,KACzC,OAAOC,MAAMH,EAAK,CAAEC,SAAQC,SACzBE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MCP3B,ICOMG,EAAc,SACzBC,EACAC,GAFyB,MAGF,CACvBC,MAAO,CACLA,EACAA,EACAA,GAEFC,QAAS,kBDhBmB,eAAyBF,EAAzB,uDAAyC,EAAzC,OAC5Bd,EAAY,CACVC,IAAI,yCAAD,OAFuB,uDAAoB,IAE3C,kBAA6Da,GAChEZ,OAAQ,QCaKe,CAAeJ,EAAUC,MAG7BI,EAAU,SAACC,GAAD,MAAsC,CAC3DJ,MAAO,CACLA,EACAA,EACAA,GAEFC,QAAS,kBDnBe,SAACG,GAAD,OACxBnB,EAAY,CACVC,IAAI,gCAAD,OAAkCkB,GACrCjB,OAAQ,QCgBKkB,CAAWD,MCxBfE,EAAkB,SAACC,GAAD,OAAsBA,EAAK,MAAU1C,WACvD2C,EAAiB,SAACD,GAAD,OAAsBA,EAAK,MAAUE,UACtDC,EAAa,SAACH,GAAD,OAAsBA,EAAK,MAAUtD,M,odCY/D,IAAMV,GAAUC,IAAOC,IAAV,MAMPkE,GAAcnE,IAAOC,IAAV,KACK,qBAAGmE,MAAkBC,OAAOC,WAO5CC,GAAOvE,IAAOC,IAAV,KAMH,SAASuE,KACd,IAAMC,EAAWC,cADQ,ECnCpB,SAAyBpB,GAAmB,IAAD,EACZqB,mBAAS,GADG,mBACzCC,EADyC,KAC7BC,EAD6B,OAEVF,mBAAS,GAFC,mBAEzCG,EAFyC,KAE5BC,EAF4B,KAchD,MAAO,CACLxB,MAAOqB,EACP5C,KAAM8C,EACNE,SAbe,WACfD,GAAe,SAACE,GAAD,OAAcA,EAAW,KACxCJ,GAAc,SAACK,GAAD,OAAeA,EAAY5B,MAYzC2B,SATe,WACfF,GAAe,SAACE,GAAD,OAAcA,EAAW,KACxCJ,GAAc,SAACK,GAAD,OAAeA,EAAY5B,OD0BC6B,CAAgB,KAApDnD,EAFiB,EAEjBA,KAAMuB,EAFW,EAEXA,MAAOyB,EAFI,EAEJA,SAAUC,EAFN,EAEMA,SACzBG,EAAQC,YAAYrB,GACpBsB,EAAgBD,YAAYvB,GAMlC,OAJAyB,qBAAU,WACRd,EAASpB,EAAY,IAAKE,MACzB,CAACkB,EAAUlB,IAGZ,eAAC,GAAD,WACE,cAACnC,EAAD,CAAWC,UAAWiE,EAAehE,QAAQ,eAC7C,eAAC6C,GAAD,WACE,cAACtC,EAAD,CACEC,YAAa,kBAAMkD,KACnBjD,YAAa,kBAAMkD,KACnBjD,KAAMA,IAER,cAACuC,GAAD,UACGa,EAAMI,KAAI,SAAC/E,GAAD,OACT,cAACD,EAAD,CAAwBC,KAAMA,GAA9B,OAAcA,QAAd,IAAcA,OAAd,EAAcA,EAAMgF,eE1DzB,SAASC,GAAUC,GACxB,SAASC,EAAIC,GACX,OAAOA,EAAI,GAAK,IAAMA,EAAIA,EAE5B,IAAMC,EAAO,IAAIC,KAAKJ,GACtB,MAAO,CACLC,EAAIE,EAAKE,WACTJ,EAAIE,EAAKG,WAAa,GACtBH,EAAKI,eACLC,KAAK,K,saCDT,IAAMpG,GAAUC,IAAOC,IAAV,MAOPmG,GAAUpG,IAAOC,IAAV,MAMPC,GAAOF,IAAOG,EAAV,MAYH,SAASkG,GAAT,GAAkD,IAA3B5F,EAA0B,EAA1BA,KAE1BE,EAUEF,EAVFE,WACA2F,EASE7F,EATF6F,KACAC,EAQE9F,EARF8F,UACAC,EAOE/F,EAPF+F,UACAC,EAMEhG,EANFgG,WACAC,EAKEjG,EALFiG,QACAC,EAIElG,EAJFkG,MACAC,EAGEnG,EAHFmG,SACAC,EAEEpG,EAFFoG,KACAC,EACErG,EADFqG,IAGF,OACE,cAAC,GAAD,UACE,eAACV,GAAD,WACE,qBAAKtF,IAAKH,EAAYI,IAAI,gBAC1B,cAAC,GAAD,UAAOuF,IACP,eAAC,GAAD,yBAAkBC,KAClB,eAAC,GAAD,yBAAkBC,KAClB,eAAC,GAAD,uBAAgBd,GAAUe,MACzBC,GAAW,eAAC,GAAD,uBAAgBA,KAC3BC,GAAS,cAAC,GAAD,UAAOA,IAChBC,GAAY,eAAC,GAAD,wBAAiBA,KAC7BC,GACC,cAAC,GAAD,UACE,mBAAG7F,KAAM6F,EAAM5F,OAAO,SAASC,IAAI,aAAnC,SACG2F,MAINC,GAAO,cAAC,GAAD,UAAOA,S,uHCnDvB,IAAM/G,GAAUC,IAAOC,IAAV,MASN,SAAS8G,KACd,IAAMtC,EAAWC,cACTd,EAAaoD,cAAbpD,SACFnD,EAAO4E,YAAYnB,GACnB+C,EAAgB5B,YAAYvB,GAMlC,OAJAyB,qBAAU,WACRd,EAASd,EAAQC,MAChB,CAACa,EAAUb,IAGZ,eAAC,GAAD,WACE,cAACxC,EAAD,CAAWC,UAAW4F,EAAe3F,QAAQ,eAC7C,cAAC+E,GAAD,CAAa5F,KAAMA,OC9BzB,IASeyG,GATA,kBACb,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,KACjC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,kBAAkBC,UAAWN,W,6RCM9C,IAAM3C,GAAQ,CACnBC,OAAQ,CACNiD,KAAM,UACNhD,QAAS,UACTiD,UAAW,UACXC,UAAW,UACXC,MAAO,UAIEC,GAAeC,YAAH,MASF,qBAAGvD,MAA0BC,OAAOiD,QCrB5CM,OATf,WACE,OACE,eAAC,IAAD,CAAexD,MAAOA,GAAtB,UACE,cAACsD,GAAD,IACA,cAAC,GAAD,QCKSG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjF,MAAK,YAAkD,IAA/CkF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCJCO,gBAAgB,CAC7BhH,UAD6B,WACyC,IAA5D0C,EAA2D,wDAAnCuE,EAAmC,uCACnE,OAAQA,EAAOC,MACb,KAAK/E,EACL,KAAKA,EACH,OAAO,EACT,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OAAO,EACT,QACE,OAAOO,IAGbE,SAf6B,WAeiC,IAArDF,EAAoD,uDAArC,GAAIuE,EAAiC,uCAC3D,OAAQA,EAAOC,MACb,KAAK/E,EACH,OAAO8E,EAAOE,OAChB,QACE,OAAOzE,IAGbtD,KAvB6B,WAuB6C,IAArEsD,EAAoE,uDAA7C,GAAIuE,EAAyC,uCACvE,OAAQA,EAAOC,MACb,KAAK/E,EACH,OAAO8E,EAAOE,OAChB,QACE,OAAOzE,MCvBA0E,GANKJ,aAAgB,CAClCjD,W,kBCEIsD,GAAaC,cCJqC,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAC3EP,GACI,IACI7D,EAAuBmE,EAAvBnE,SAAUqE,EAAaF,EAAbE,SAElB,GAAsB,oBAAXR,EACT,OAAOA,EAAO7D,EAAUqE,GAJvB,IAOKtF,EAA4B8E,EAA5B9E,MAAOC,EAAqB6E,EAArB7E,QAAYsF,EAPxB,aAOiCT,EAPjC,qBASH,IAAK7E,EACH,OAAOoF,EAAKP,GAGd,IAAKU,MAAMC,QAAQzF,IAA2B,IAAjBA,EAAM0F,OACjC,MAAM,IAAIC,MAAM,4CAGlB,IAAK3F,EAAM4F,OAAM,SAACb,GAAD,MAA0B,kBAATA,KAChC,MAAM,IAAIY,MAAM,wCAlBf,kBAqBiC3F,EArBjC,GAqBI6F,EArBJ,KAqBaC,EArBb,KAqBsBC,EArBtB,KAwBH,OAFAV,EAAK,6BAAKP,GAAN,IAAcC,KAAMc,KAEjB5F,IACJX,MACC,SAAC0G,GAAD,OACEX,EAAK,6BACAE,GADD,IAEFP,OAAQgB,EACRjB,KAAMe,QAEV,SAAClG,GACCyF,EAAK,6BACAE,GADD,IAEF3F,QACAmF,KAAMgB,QAIXtG,OAAM,SAACC,GACNC,QAAQC,MAAM,gBAAiBF,GAC/B2F,EAAK,CAAEN,KAAMgB,YD7BJX,GAFDa,aAAYhB,GAFL,GAEgCiB,aAAQhB,KET7DiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAejB,MAAOA,GAAtB,SACE,cAAC,GAAD,QAGJkB,SAASC,eAAe,SAM1BlC,O","file":"static/js/main.c4b0773e.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/users';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// styles\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 10%;\n  margin: 10px;\n`;\n\nconst Text = styled.p`\n  font-size: 24px;\n  margin-top: 0;\n  margin-bottom: 5px;\n`;\n\nconst Image = styled.img`\n  width: 100px;\n  height: 100px;\n  margin-bottom: 5px;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\ntype UserRowProps = {\n  user: User;\n};\n\nexport function UserRow({ user }: UserRowProps) {\n  const { login, avatar_url, html_url } = user;\n\n  return (\n    <Wrapper>\n      <StyledLink to={`/user/${login}`}>\n        <Image src={avatar_url} alt=\"user avatar\" />\n        <Text>{login}</Text>\n      </StyledLink>\n\n      <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n        Github profile\n      </a>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\n// styles\nconst StyledPreloader = styled.div`\n  min-width: 100vw;\n  min-height: 100vh;\n  background-color: #fff;\n  opacity: 0.7;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1200;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\ntype PreloaderProps = {\n  isLoading: boolean;\n  message: string;\n};\n\nexport function Preloader({ isLoading, message }: PreloaderProps) {\n  return isLoading ? <StyledPreloader>{message}</StyledPreloader> : null;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\n// styles\nconst Wrapper = styled.div`\n  margin: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Arrow = styled.i`\n  border: solid black;\n  border-width: 0 3px 3px 0;\n  display: inline-block;\n  padding: 5px;\n`;\n\nconst ArrowLeft = styled(Arrow)`\n  transform: rotate(135deg);\n  -webkit-transform: rotate(135deg);\n`;\n\nconst ArrowRight = styled(Arrow)`\n  transform: rotate(-45deg);\n  -webkit-transform: rotate(-45deg);\n`;\n\nconst ArrowContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst PageNumber = styled.div`\n  font-size: 20px;\n`;\n\ntype PaginationProps = {\n  onNextClick: () => void;\n  onPrevClick: () => void;\n  page: number;\n};\n\nexport function Pagination({\n  onNextClick,\n  onPrevClick,\n  page,\n}: PaginationProps) {\n  return (\n    <Wrapper>\n      <ArrowContainer onClick={onPrevClick}>\n        <ArrowLeft />\n      </ArrowContainer>\n      <PageNumber>{page}</PageNumber>\n      <ArrowContainer onClick={onNextClick}>\n        <ArrowRight />\n      </ArrowContainer>\n    </Wrapper>\n  );\n}\n","const REDUCER = 'users';\n\nexport const GET_USER_LIST_REQUEST = `${REDUCER}/GET_USER_LIST_REQUEST`;\nexport const GET_USER_LIST_SUCCESS = `${REDUCER}/GET_USER_LIST_SUCCESS`;\nexport const GET_USER_LIST_FAILURE = `${REDUCER}/GET_USER_LIST_FAILURE`;\n\nexport const GET_USER_REQUEST = `${REDUCER}/GET_USER_REQUEST`;\nexport const GET_USER_SUCCESS = `${REDUCER}/GET_USER_SUCCESS`;\nexport const GET_USER_FAILURE = `${REDUCER}/GET_USER_FAILURE`;\n\nexport default REDUCER;\n","type MakeApiCall = {\n  url: string;\n  method: 'GET' | 'PUT' | 'PATCH' | 'DELETE';\n  body?: any;\n};\n\nexport function makeApiCall({ url, method, body }: MakeApiCall) {\n  return fetch(url, { method, body })\n    .then((res) => res.json())\n    .catch((err) => console.error(err));\n}\n","import { makeApiCall } from '../utils/makeApiCall';\n\nexport const apiGetUserList = (per_page: number = 100, since: number = 0) =>\n  makeApiCall({\n    url: `https://api.github.com/users?per_page=${per_page}&since=${since}`,\n    method: 'GET',\n  });\n\nexport const apiGetUser = (username: string) =>\n  makeApiCall({\n    url: `https://api.github.com/users/${username}`,\n    method: 'GET',\n  });\n","import { BaseAction } from '../../types/redux';\nimport * as types from './constants';\nimport { apiGetUser, apiGetUserList } from '../../api/users';\n\ninterface GetUserListAction extends BaseAction {}\ninterface GetUserAction extends BaseAction {}\n\nexport type UsersActionTypes = GetUserListAction | GetUserAction;\n\nexport const getUserList = (\n  per_page: number,\n  since: number\n): GetUserListAction => ({\n  types: [\n    types.GET_USER_LIST_REQUEST,\n    types.GET_USER_LIST_SUCCESS,\n    types.GET_USER_LIST_FAILURE,\n  ],\n  promise: () => apiGetUserList(per_page, since),\n});\n\nexport const getUser = (username: string): GetUserAction => ({\n  types: [\n    types.GET_USER_REQUEST,\n    types.GET_USER_SUCCESS,\n    types.GET_USER_FAILURE,\n  ],\n  promise: () => apiGetUser(username),\n});\n","import REDUCER from './constants';\nimport { RootState } from '../rootReducer';\n\nexport const selectIsLoading = (state: RootState) => state[REDUCER].isLoading;\nexport const selectUserList = (state: RootState) => state[REDUCER].userList;\nexport const selectUser = (state: RootState) => state[REDUCER].user;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\n// components\nimport { UserRow } from '../../components/UserRow';\nimport { Preloader } from '../../components/Preloader';\nimport { Pagination } from '../../components/Pagination';\n\n// redux\nimport { getUserList } from '../../redux/users/actions';\nimport { selectUserList, selectIsLoading } from '../../redux/users/selectors';\n\n// utils\nimport { useGHPagination } from '../../hooks/usePagination';\n\n// styles\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ListWrapper = styled.div`\n  background-color: ${({ theme }) => theme.colors.primary};\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport function UserList() {\n  const dispatch = useDispatch();\n  const { page, since, nextPage, prevPage } = useGHPagination(100);\n  const users = useSelector(selectUserList);\n  const isUserLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getUserList(100, since));\n  }, [dispatch, since]);\n\n  return (\n    <Wrapper>\n      <Preloader isLoading={isUserLoading} message=\"Loading...\" />\n      <ListWrapper>\n        <Pagination\n          onNextClick={() => nextPage()}\n          onPrevClick={() => prevPage()}\n          page={page}\n        />\n        <List>\n          {users.map((user) => (\n            <UserRow key={user?.id} user={user} />\n          ))}\n        </List>\n      </ListWrapper>\n    </Wrapper>\n  );\n}\n","import { useState } from 'react';\n\nexport function useGHPagination(per_page: number) {\n  const [startIndex, setStartIndex] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const nextPage = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n    setStartIndex((prevIndex) => prevIndex + per_page);\n  };\n\n  const prevPage = () => {\n    setCurrentPage((prevPage) => prevPage - 1);\n    setStartIndex((prevIndex) => prevIndex - per_page);\n  };\n\n  return {\n    since: startIndex,\n    page: currentPage,\n    nextPage,\n    prevPage,\n  };\n}\n","export function parseDate(inputDate: string) {\n  function pad(s: number) {\n    return s < 10 ? '0' + s : s;\n  }\n  const date = new Date(inputDate);\n  return [\n    pad(date.getDate()),\n    pad(date.getMonth() + 1),\n    date.getFullYear(),\n  ].join('.');\n}\n","import React from 'react';\nimport { FullUser } from '../../types/users';\nimport styled from 'styled-components';\n\n// utils\nimport { parseDate } from '../../utils/parseDate';\n\n// styles\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Profile = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Text = styled.p`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\ntype UserProfileProps = {\n  user: Partial<FullUser>;\n};\n\n// sometimes fields bio, email, company, blog can be empty\n// that`s why i use {property &&...} syntax\n\nexport function UserProfile({ user }: UserProfileProps) {\n  const {\n    avatar_url,\n    name,\n    followers,\n    following,\n    created_at,\n    company,\n    email,\n    location,\n    blog,\n    bio,\n  } = user;\n\n  return (\n    <Wrapper>\n      <Profile>\n        <img src={avatar_url} alt=\"user avatar\" />\n        <Text>{name}</Text>\n        <Text>Followers: {followers}</Text>\n        <Text>Following: {following}</Text>\n        <Text>Created: {parseDate(created_at as string)}</Text>\n        {company && <Text>Company: {company}</Text>}\n        {email && <Text>{email}</Text>}\n        {location && <Text>Location: {location}</Text>}\n        {blog && (\n          <Text>\n            <a href={blog} target=\"_blank\" rel=\"noreferrer\">\n              {blog}\n            </a>\n          </Text>\n        )}\n        {bio && <Text>{bio}</Text>}\n      </Profile>\n    </Wrapper>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport styled from 'styled-components';\n\n// redux\nimport { getUser } from '../../redux/users/actions';\nimport { selectUser, selectIsLoading } from '../../redux/users/selectors';\n\n// components\nimport { UserProfile } from '../../components/UserProfile';\nimport { Preloader } from '../../components/Preloader';\n\n// styles\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\ntype ParamsTypes = {\n  username: string;\n};\n\nexport function User() {\n  const dispatch = useDispatch();\n  const { username } = useParams<ParamsTypes>();\n  const user = useSelector(selectUser);\n  const isLoadingUser = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getUser(username));\n  }, [dispatch, username]);\n\n  return (\n    <Wrapper>\n      <Preloader isLoading={isLoadingUser} message=\"Loading...\" />\n      <UserProfile user={user} />\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { UserList } from '../pages/users/UserList';\nimport { User } from '../pages/users/User';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={UserList} />\n      <Route exact path=\"/user/:username\" component={User} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import { createGlobalStyle, DefaultTheme } from 'styled-components';\n\ninterface ThemeType extends DefaultTheme {\n  colors: {\n    main: string;\n    primary: string;\n    secondary: string;\n    black: string;\n    white: string;\n  };\n}\n\ninterface Styles {\n  theme: ThemeType;\n}\n\nexport const theme = {\n  colors: {\n    main: '#f5f4f4',\n    primary: '#e0f6ef',\n    secondary: '#cdac81',\n    dark_blue: '#00303f',\n    white: 'white',\n  },\n};\n\nexport const GlobalStyles = createGlobalStyle`\n html {\n   box-sizing: border-box;\n   font-family: Arial, sans-serif;\n}\n \n body {\n   margin: 0;\n   padding: 0;\n   background-color: ${({ theme }: Styles) => theme.colors.main};\n }\n \n *,\n *::before,\n *::after {\n   box-sizing: inherit;\n}\n`;\n","import React from 'react';\nimport Router from './routes';\nimport { ThemeProvider } from 'styled-components';\nimport { theme, GlobalStyles } from './styles';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Router />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport * as types from './constants';\nimport { UsersActionTypes } from './actions';\nimport { Users, FullUser } from '../../types/users';\n\nexport default combineReducers({\n  isLoading(state: boolean = false, action: UsersActionTypes): boolean {\n    switch (action.type) {\n      case types.GET_USER_LIST_REQUEST:\n      case types.GET_USER_REQUEST:\n        return true;\n      case types.GET_USER_LIST_SUCCESS:\n      case types.GET_USER_SUCCESS:\n      case types.GET_USER_LIST_FAILURE:\n      case types.GET_USER_FAILURE:\n        return false;\n      default:\n        return state;\n    }\n  },\n  userList(state: Users = [], action: UsersActionTypes): Users {\n    switch (action.type) {\n      case types.GET_USER_LIST_SUCCESS:\n        return action.result;\n      default:\n        return state;\n    }\n  },\n  user(state: FullUser | {} = {}, action: UsersActionTypes): FullUser | {} {\n    switch (action.type) {\n      case types.GET_USER_SUCCESS:\n        return action.result;\n      default:\n        return state;\n    }\n  },\n});\n","import { combineReducers } from 'redux';\n\nimport users from './users/reducer';\n\nconst rootReducer = combineReducers({\n  users,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../redux/rootReducer';\n\n// middlewares\nimport { apiMiddleware } from './middlewares/apiMiddleware';\n\nconst middleware = applyMiddleware(\n  apiMiddleware,\n  // createLogger({\n  //   collapsed: true,\n  // })\n);\n\nconst initialState = {};\n\nconst store = createStore(rootReducer, initialState, compose(middleware));\n\nexport default store;\n","import { Middleware } from 'redux';\nimport { RootState } from '../../redux/rootReducer';\n\nexport const apiMiddleware: Middleware<{}, RootState> = (store) => (next) => (\n  action\n) => {\n  const { dispatch, getState } = store;\n\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n\n  const { types, promise, ...rest } = action;\n\n  if (!promise) {\n    return next(action);\n  }\n\n  if (!Array.isArray(types) || types.length !== 3) {\n    throw new Error('Expected an array of three action types.');\n  }\n\n  if (!types.every((type) => typeof type === 'string')) {\n    throw new Error('Expected action types to be strings.');\n  }\n\n  const [REQUEST, SUCCESS, FAILURE] = types;\n  next({ ...action, type: REQUEST });\n\n  return promise()\n    .then(\n      (response: Response) =>\n        next({\n          ...rest,\n          result: response,\n          type: SUCCESS,\n        }),\n      (error: Error) => {\n        next({\n          ...rest,\n          error,\n          type: FAILURE,\n        });\n      }\n    )\n    .catch((err: Error) => {\n      console.error('apiMiddleware', err);\n      next({ type: FAILURE });\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider as StoreProvider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}